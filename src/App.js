import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Toaster } from "@/components/ui/toaster";
import { Toaster as Sonner } from "@/components/ui/sonner";
import { TooltipProvider } from "@/components/ui/tooltip";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { BrowserRouter, Routes, Route } from "react-router-dom";
import ProtectedRoute from "./components/ProtectedRoute";
import Index from "./pages/Index";
import CreateInvoice from "./pages/CreateInvoice";
import InvoiceDetails from "./pages/InvoiceDetails";
import LandingPage from "./pages/LandingPage";
import Dashboard from "./pages/Dashboard";
import InvoiceManager from "./pages/InvoiceManager";
import Help from "./pages/Help";
import ApiDemo from "./pages/ApiDemo";
import Demo from "./pages/Demo";
import SupabaseTest from "./pages/SupabaseTest";
// Advanced DeFi Feature Pages
import NFTMarketplace from "./pages/NFTMarketplace";
import Analytics from "./pages/Analytics";
import YieldOptimizerPage from "./pages/YieldOptimizerPage";
import CrossChainSwapPage from "./pages/CrossChainSwapPage";
import Treasury from "./pages/Treasury";
import InvoiceEditorPage from "./pages/InvoiceEditorPage";
import APIShowcase from "./pages/APIShowcase";
import RealtimeMonitor from "./pages/RealtimeMonitor";
import DiscordNotifications from "./pages/DiscordNotifications";
import InteractiveDemo from "./pages/InteractiveDemo";
const queryClient = new QueryClient();
const App = () => (_jsx(QueryClientProvider, { client: queryClient, children: _jsxs(TooltipProvider, { children: [_jsx(Toaster, {}), _jsx(Sonner, {}), _jsx(BrowserRouter, { children: _jsxs(Routes, { children: [_jsx(Route, { path: "/landing", element: _jsx(LandingPage, {}) }), _jsx(Route, { path: "/", element: _jsx(ProtectedRoute, { children: _jsx(Index, {}) }) }), _jsx(Route, { path: "/app", element: _jsx(ProtectedRoute, { children: _jsx(Index, {}) }) }), _jsx(Route, { path: "/dashboard", element: _jsx(ProtectedRoute, { children: _jsx(Dashboard, {}) }) }), _jsx(Route, { path: "/invoices", element: _jsx(ProtectedRoute, { children: _jsx(InvoiceManager, {}) }) }), _jsx(Route, { path: "/create", element: _jsx(ProtectedRoute, { children: _jsx(CreateInvoice, {}) }) }), _jsx(Route, { path: "/demo", element: _jsx(ProtectedRoute, { children: _jsx(Demo, {}) }) }), _jsx(Route, { path: "/invoice/:id", element: _jsx(ProtectedRoute, { children: _jsx(InvoiceDetails, {}) }) }), _jsx(Route, { path: "/interactive-demo", element: _jsx(ProtectedRoute, { children: _jsx(InteractiveDemo, {}) }) }), _jsx(Route, { path: "/help", element: _jsx(Help, {}) }), _jsx(Route, { path: "/api-demo", element: _jsx(ApiDemo, {}) }), _jsx(Route, { path: "/api-showcase", element: _jsx(APIShowcase, {}) }), _jsx(Route, { path: "/supabase-test", element: _jsx(SupabaseTest, {}) }), _jsx(Route, { path: "/realtime-monitor", element: _jsx(RealtimeMonitor, {}) }), _jsx(Route, { path: "/nft-marketplace", element: _jsx(ProtectedRoute, { children: _jsx(NFTMarketplace, {}) }) }), _jsx(Route, { path: "/analytics", element: _jsx(ProtectedRoute, { children: _jsx(Analytics, {}) }) }), _jsx(Route, { path: "/yield-optimizer", element: _jsx(ProtectedRoute, { children: _jsx(YieldOptimizerPage, {}) }) }), _jsx(Route, { path: "/cross-chain-swap", element: _jsx(ProtectedRoute, { children: _jsx(CrossChainSwapPage, {}) }) }), _jsx(Route, { path: "/treasury", element: _jsx(ProtectedRoute, { children: _jsx(Treasury, {}) }) }), _jsx(Route, { path: "/invoice-editor", element: _jsx(ProtectedRoute, { children: _jsx(InvoiceEditorPage, {}) }) }), _jsx(Route, { path: "/discord-notifications", element: _jsx(ProtectedRoute, { children: _jsx(DiscordNotifications, {}) }) })] }) })] }) }));
export default App;
